name: CDK Deploy

on:
  issue_comment:
    types: [created]

jobs:
  cdk-deploy:
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Install dependencies
        run: |
          npm install -g aws-cdk
          npm install

      - name: Run CDK diff
        id: cdk-diff
        run: |
          cdk diff > diff.txt
          cat diff.txt

      - name: Post diff comment
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `### CDK Diff Results
            \`\`\`
            ${require('fs').readFileSync('diff.txt', 'utf8')}
            \`\`\`
            Please approve the deployment by commenting \`approve\`.`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Wait for approval
        uses: actions/github-script@v6
        id: wait-for-approval
        with:
          script: |
            const checkApproval = async () => {
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              return reviews.data.some(review => review.user.login === context.actor && review.state === 'APPROVED');
            };

            let isApproved = await checkApproval();
            while (!isApproved) {
              console.log('Waiting for approval...');
              await new Promise(resolve => setTimeout(resolve, 30000)); // wait 30 seconds before checking again
              isApproved = await checkApproval();
            }
            console.log('Approved');

      - name: Deploy with CDK
        run: |
          cdk deploy --require-approval never

      - name: Merge PR
        uses: gh-actions/merge@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: merge
